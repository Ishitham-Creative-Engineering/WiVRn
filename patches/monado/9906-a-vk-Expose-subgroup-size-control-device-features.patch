From c1b766eca08a55b484576c3984fb48b8b909e9c9 Mon Sep 17 00:00:00 2001
From: Patrick Nicolas <patricknicolas@laposte.net>
Date: Sun, 3 Aug 2025 11:53:24 +0200
Subject: [PATCH 6/9] a/vk: Expose subgroup size control device features

---
 src/xrt/auxiliary/vk/vk_bundle_init.c | 42 +++++++++++++++++++++++++--
 src/xrt/auxiliary/vk/vk_helpers.h     |  2 ++
 2 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/src/xrt/auxiliary/vk/vk_bundle_init.c b/src/xrt/auxiliary/vk/vk_bundle_init.c
index b97dd3f53..bbc0b6ca5 100644
--- a/src/xrt/auxiliary/vk/vk_bundle_init.c
+++ b/src/xrt/auxiliary/vk/vk_bundle_init.c
@@ -1150,6 +1150,13 @@ filter_device_features(struct vk_bundle *vk,
 	};
 #endif
 
+#ifdef VK_EXT_subgroup_size_control
+	VkPhysicalDeviceSubgroupSizeControlFeaturesEXT subgroup_size_control = {
+	    .sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT,
+	    .pNext = NULL,
+	};
+#endif
+
 	VkPhysicalDeviceFeatures2 physical_device_features = {
 	    .sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
 	    .pNext = NULL,
@@ -1221,6 +1228,13 @@ filter_device_features(struct vk_bundle *vk,
 	}
 #endif
 
+#ifdef VK_EXT_subgroup_size_control
+	if (vk->has_EXT_subgroup_size_control) {
+		vk_append_to_pnext_chain((VkBaseInStructure *)&physical_device_features,
+		                         (VkBaseInStructure *)&subgroup_size_control);
+	}
+#endif
+
 	vk->vkGetPhysicalDeviceFeatures2( //
 	    physical_device,              // physicalDevice
 	    &physical_device_features);   // pFeatures
@@ -1270,6 +1284,11 @@ filter_device_features(struct vk_bundle *vk,
 	CHECK(shader_int8, shader_float16_int8.shaderInt8);
 #endif
 
+#ifdef VK_EXT_subgroup_size_control
+	CHECK(subgroup_size_control, subgroup_size_control.subgroupSizeControl);
+	CHECK(compute_full_subgroups, subgroup_size_control.computeFullSubgroups);
+#endif
+
 	CHECK(shader_image_gather_extended, physical_device_features.features.shaderImageGatherExtended);
 
 	CHECK(shader_storage_image_write_without_format,
@@ -1290,7 +1309,9 @@ filter_device_features(struct vk_bundle *vk,
 	         "\n\tstorage_buffer_16bit_access: %i"
 	         "\n\tsynchronization_2: %i"
 	         "\n\ttimeline_semaphore: %i"
-	         "\n\tvideo_maintenance_1: %i",                              //
+	         "\n\tvideo_maintenance_1: %i"
+	         "\n\tsubgroup_size_control: %i"
+	         "\n\tcompute_full_subgroups: %i",                           //
 	         device_features->ext_fmt_resolve,                           //
 	         device_features->null_descriptor,                           //
 	         device_features->shader_image_gather_extended,              //
@@ -1301,7 +1322,9 @@ filter_device_features(struct vk_bundle *vk,
 	         device_features->storage_buffer_16bit_access,               //
 	         device_features->synchronization_2,                         //
 	         device_features->timeline_semaphore,                        //
-	         device_features->video_maintenance_1);                      //
+	         device_features->video_maintenance_1,                      //
+	         device_features->subgroup_size_control,                     //
+	         device_features->compute_full_subgroups);                   //
 }
 
 
@@ -1505,6 +1528,15 @@ vk_create_device(struct vk_bundle *vk,
 	};
 #endif
 
+#ifdef VK_EXT_subgroup_size_control
+	VkPhysicalDeviceSubgroupSizeControlFeaturesEXT subgroup_size_control= {
+	    .sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT,
+	    .pNext = NULL,
+	    .subgroupSizeControl = device_features.subgroup_size_control,
+	    .computeFullSubgroups = device_features.compute_full_subgroups,
+	};
+#endif
+
 	VkPhysicalDeviceFeatures enabled_features = {
 	    .shaderImageGatherExtended = device_features.shader_image_gather_extended,
 	    .shaderStorageImageWriteWithoutFormat = device_features.shader_storage_image_write_without_format,
@@ -1583,6 +1615,12 @@ vk_create_device(struct vk_bundle *vk,
 	}
 #endif
 
+#ifdef VK_EXT_subgroup_size_control
+	if (vk->has_EXT_subgroup_size_control) {
+		vk_append_to_pnext_chain((VkBaseInStructure *)&device_create_info, (VkBaseInStructure *)&subgroup_size_control);
+	}
+#endif
+
 	ret = vk->vkCreateDevice(vk->physical_device, &device_create_info, NULL, &vk->device);
 
 	u_string_list_destroy(&device_ext_list);
diff --git a/src/xrt/auxiliary/vk/vk_helpers.h b/src/xrt/auxiliary/vk/vk_helpers.h
index 39bf9bb30..1862aeb93 100644
--- a/src/xrt/auxiliary/vk/vk_helpers.h
+++ b/src/xrt/auxiliary/vk/vk_helpers.h
@@ -1040,6 +1040,8 @@ struct vk_device_features
 	bool storage_buffer_16bit_access;
 	bool present_wait;
 	bool video_maintenance_1;
+	bool subgroup_size_control;
+	bool compute_full_subgroups;
 };
 
 /*!
-- 
2.51.0

